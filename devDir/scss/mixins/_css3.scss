@charset "UTF-8";
// Flex variation
//
// Custom styles for additional flex alignment options.


// 各个浏览器的属性前缀，true表示开启，false表示不开启
//-----------------------------------------------------
$prefixForWebkit: true !default;
$prefixForMozilla: true !default;
$prefixForMicrosoft: true !default;
$prefixForOpera: true !default;
//opera从版本15开始转向webkit，所以默认为false，不输出o前缀
$prefixNo: true !default;


// 用于flex的兼容变量
$flexOld: true !default;
//09版本 用于兼容移动端，-webkit前缀
$flexMid: true !default;
//用于ie10 -ms前缀

@mixin prefixer($property, $value, $prefixes: o webkit moz ms) {
  @each $prefix in $prefixes {
    @if $prefix == webkit and $prefixForWebkit == true {
      -webkit-#{$property}: $value;
    } @else if $prefix == moz and $prefixForMozilla == true {
      -moz-#{$property}: $value;
    } @else if $prefix == ms and $prefixForMicrosoft == true {
      -ms-#{$property}: $value;
    } @else if $prefix == o and $prefixForOpera == true {
      -o-#{$property}: $value;
    }
  }
  @if $prefixNo {
    #{$property}: $value;
  }
}
@mixin flex-old($property, $value, $propertyPrefix: true) {
  @if $flexOld {
    @if $propertyPrefix {
      -webkit-#{$property} : $value;
    } @else {
      #{$property} : -webkit-#{$value};
    }
  }
}

@mixin flex-mid($property, $value, $propertyPrefix: true) {
  @if $flexMid {
    @if $propertyPrefix {
      -ms-#{$property} : $value;
    } @else {
      #{$property} : -ms-#{$value};
    }
  }
}

@mixin flex-direction($direction: column) {
  // row | row-reverse | column | column-reverse
  @if $direction == row {
    @include flex-old(box-orient, horizontal);
  }
  @if $direction == column {
    @include flex-old(box-orient, vertical);
  }
  @if $direction == row-reverse {
    @include flex-old(box-orient, horizontal);
    @include flex-old(box-direction, reverse);
  }
  @if $direction == column-reverse {
    @include flex-old(box-orient, vertical);
    @include flex-old(box-direction, reverse);
  }
  @include flex-mid(flex-direction, $direction);
  @include prefixer(flex-direction, $direction, webkit moz);
}
@mixin justify-content($align: space-between) {
  // flex-start | flex-end | center | space-between | space-around
  @if $align == flex-start {
    @include flex-old(box-pack, start);
    @include flex-mid(flex-pack, start);
  } @else if $align == flex-end {
    @include flex-old(box-pack, end);
    @include flex-mid(flex-pack, end);
  } @else if $align == space-between {
    @include flex-old(box-pack, justify);
    @include flex-mid(flex-pack, justify);
  } @else if $align == space-around {
    @include flex-mid(flex-pack, distribute);
  } @else {
    @include flex-old(box-pack, $align);
    @include flex-mid(flex-pack, $align);
  }
  @include prefixer(justify-content, $align, webkit moz);
}

// box-shadow
@mixin box-shadow($shadow...) {
  @if length($shadow) >= 1 {
    @include prefixer(box-shadow, $shadow);
  } @else {
    $shadow: 0 0 4px rgba(0, 0, 0, .3);
    @include prefixer(box-shadow, $shadow);
  }
}

@mixin rotate($degrees...) {
  @include prefixer(transform, rotate($degrees));
}
@mixin transform-origin($axes) {
  // x-axis - left | center | right  | length | %
  // y-axis - top  | center | bottom | length | %
  // z-axis -                          length
  @include prefixer(transform-origin, $axes);
}
//垂直渐变，从上往下
@mixin gradient-vertical($gradient...) {
  background-image: -webkit-linear-gradient(top, $gradient); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(top, $gradient); // Opera 11.10
  background-image: linear-gradient(to bottom, $gradient); // Standard, IE10
}